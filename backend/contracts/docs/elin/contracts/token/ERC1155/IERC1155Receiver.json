{
    "methods": {
        "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
            "stateMutability": "nonpayable",
            "code": "function onERC1155BatchReceived(address operator, address from, uint256[] ids, uint256[] values, bytes data) external nonpayable returns (bytes4)",
            "inputs": {
                "operator": {
                    "type": "address",
                    "description": "The address which initiated the batch transfer (i.e. msg.sender)"
                },
                "from": {
                    "type": "address",
                    "description": "The address which previously owned the token"
                },
                "ids": {
                    "type": "uint256[]",
                    "description": "An array containing ids of each token being transferred (order and length must match values array)"
                },
                "values": {
                    "type": "uint256[]",
                    "description": "An array containing amounts of each token being transferred (order and length must match ids array)"
                },
                "data": {
                    "type": "bytes",
                    "description": "Additional data with no specified format"
                }
            },
            "outputs": {
                "_0": {
                    "type": "bytes4",
                    "description": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
                }
            },
            "details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector)."
        },
        "onERC1155Received(address,address,uint256,uint256,bytes)": {
            "stateMutability": "nonpayable",
            "code": "function onERC1155Received(address operator, address from, uint256 id, uint256 value, bytes data) external nonpayable returns (bytes4)",
            "inputs": {
                "operator": {
                    "type": "address",
                    "description": "The address which initiated the transfer (i.e. msg.sender)"
                },
                "from": {
                    "type": "address",
                    "description": "The address which previously owned the token"
                },
                "id": {
                    "type": "uint256",
                    "description": "The ID of the token being transferred"
                },
                "value": {
                    "type": "uint256",
                    "description": "The amount of tokens being transferred"
                },
                "data": {
                    "type": "bytes",
                    "description": "Additional data with no specified format"
                }
            },
            "outputs": {
                "_0": {
                    "type": "bytes4",
                    "description": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
                }
            },
            "details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector)."
        },
        "supportsInterface(bytes4)": {
            "stateMutability": "view",
            "code": "function supportsInterface(bytes4 interfaceId) external view returns (bool)",
            "inputs": {
                "interfaceId": {
                    "type": "bytes4"
                }
            },
            "outputs": {
                "_0": {
                    "type": "bool"
                }
            },
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
        }
    },
    "events": {},
    "errors": {},
    "path": "elin/contracts/token/ERC1155",
    "details": "_Available since v3.1._",
    "name": "IERC1155Receiver"
}